{"version":3,"sources":["components/ImdbCard/ImdbCard.tsx","common/stylesVariables.ts","components/features/SearchPage/FilmCard/FilmCard.tsx","api/filmAPI.ts","app/appReducer.tsx","components/features/FilmPage/film-reducer.ts","assets/images/spinner.svg","components/Preloader/Preloader.tsx","components/features/SearchPage/YoutubeBackground/YoutubeBackground.tsx","assets/images/searchButton.svg","components/features/FilmPage/Main/Header/HeaderInput.tsx","components/features/FilmPage/Main/Header/Header.tsx","components/features/SimilarFilms/similarFilms-reducer.ts","components/features/FilmPage/Main/Main.tsx","components/features/FilmPage/Main/FilmPage.tsx","components/features/SearchPage/SearchPage.tsx","components/features/FilmPage/FilmDescription/Footer.tsx","components/features/SimilarFilms/SimilarFilm.tsx","components/features/FilmPage/FilmDescription/MainDescription.tsx","components/features/FilmPage/FilmDescription/FilmDescription.tsx","components/features/FilmPage/Film.tsx","components/SearchRedirect/SearchRedirect.tsx","assets/images/background.png","assets/images/404.gif","components/features/404Page/404Page.tsx","app/main/routes/Pages.tsx","app/main/routes/Routes.tsx","app/main/Main.tsx","app/App.tsx","reportWebVitals.ts","app/store.ts","index.tsx","components/features/SearchPage/YoutubeBackground/YoutubeBackground.module.scss"],"names":["IMDBCardWrapper","styled","div","props","inline","IMDBTitle","h4","ImdbCard","rating","inlineProps","styleColor","backgroundCover","css","styledHeaderFooter","FilmCardWrapper","Title","h3","Poster","image","Wrapper","FilmDescription","FilmCard","film","to","className","title","type","genres","year","awards","imDbRating","apiKey","process","APIKEY","instance","axios","create","baseURL","filmAPI","get","id","slice","createSlice","name","initialState","loading","error","reducers","setAppLoading","state","action","payload","setAppError","appReducer","reducer","actions","getFilmId","createAsyncThunk","params","a","dispatch","rejectWithValue","res","filmId","data","results","message","console","log","getFilmData","setFilmId","setFilm","extraReducers","builder","addCase","fulfilled","filmReducer","Preloader","Spinner","src","preloader","alt","YoutubeBackground","styles","videoBackground","videoForeground","videoId","opts","playerVars","autoplay","controls","rel","showinfo","loop","mute","videoIframe","onEnd","event","target","playVideo","InputWrapper","searchIcon","Input","input","HeaderInput","placeholder","HeaderWrapper","header","Link","NavLink","Header","getSimilarFilmData","similarFilmsReducer","MainWrapper","h1","Button","button","Awards","span","GenresWrapper","Iframe","iframe","Span","Main","useSelector","useDispatch","useState","showTrailer","setShowTrailer","useEffect","similars","map","f","posters","backdrops","link","trailer","linkEmbed","onClick","frameBorder","allowFullScreen","PageWrapper","FilmPage","appLoading","app","SearchPageWrapper","SearchPageContainer","SecondTitle","h2","Form","form","SearchPage","useForm","register","handleSubmit","onSubmit","FooterWrapper","footer","Footer","SimilarFilmWrapper","SimilarFilmInner","Description","DescriptionTitle","GenresSpan","Paragraph","p","SimilarFilm","similarFilm","toggleDescription","setToggleDescription","similarFilms","redirect","setRedirect","PATH","FILM","onMouseEnter","onMouseLeave","spy","smooth","duration","plot","MainDescriptionWrapper","SimilarFilms","MainDescription","Film","SearchRedirect","children","restProps","SEARCH","PageInner","backgroundImage","Image","img","ErrorPage","travoltaGif","ERROR","mappedRoutes","_id","path","exact","page","render","Routes","App","appError","toast","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.48d53a5e.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ntype ImdbCardPropsType = {\r\n    rating: string\r\n    inlineProps?: boolean\r\n}\r\n\r\nexport const IMDBCardWrapper = styled.div<{inline?: boolean}>`\r\n  display: ${props => props?.inline ? 'inline-flex' : \"flex\"};\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 87px;\r\n  height: 30px;\r\n  background-color: #FAC539;\r\n  border-radius: 8px;\r\n  color: #000000;\r\n`\r\n\r\nexport const IMDBTitle = styled.h4`\r\n  font-weight: 900;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  padding: 8px 12px;\r\n`\r\n\r\n\r\nexport const ImdbCard: React.FC<ImdbCardPropsType> = ({rating, inlineProps}) => {\r\n    return (\r\n        <IMDBCardWrapper inline={inlineProps}>\r\n            <IMDBTitle>IMDB {rating}</IMDBTitle>\r\n        </IMDBCardWrapper>\r\n    )\r\n}","import {css} from \"styled-components\";\r\n\r\nexport const styleColor = {\r\n    primaryFontColor: '#FEFEFE',\r\n    secondaryFontColor: '#000000',\r\n    secondaryBackgroundColor: '#111111',\r\n    HeaderInputBackgroundColor: '#1B1919',\r\n    HeaderTextColor: '#5F5F5F'\r\n}\r\n\r\nexport const backgroundCover = css`\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n`\r\n\r\nexport const styledHeaderFooter = css`\r\n  min-height: 100px;\r\n  background-color: ${styleColor.secondaryBackgroundColor};\r\n  display: flex;\r\n`","import {ImdbCard} from '../../../ImdbCard/ImdbCard'\r\nimport styled from 'styled-components'\r\nimport {FilmType} from '../../../../api/filmAPI'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {backgroundCover, styleColor} from \"../../../../common/stylesVariables\";\r\n\r\ntype FilmCardPropsType = {\r\n    film: FilmType\r\n}\r\n\r\nconst FilmCardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  max-width: 555px;\r\n  max-height: 171px;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  background-color: rgba(17, 17, 17, 0.8);\r\n  overflow: hidden;\r\n`\r\n\r\nconst Title = styled.h3`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  line-height: 29px;\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst Poster = styled.div<{ image: string }>`\r\n  background-image: url(${props => props.image});\r\n  width: 95px;\r\n  height: 141px;\r\n  border-radius: 8px;\r\n  ${backgroundCover};\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  &.aboutFilm {\r\n    display: flex;\r\n    padding: 15px 0 8px 20px;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  &.descriptionContainer {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    max-width: 300px;\r\n  }\r\n`\r\n\r\nconst FilmDescription = styled.div`\r\n  &.genres {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 17px;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  & span {\r\n    position: relative;\r\n    padding-right: 20px;\r\n  }\r\n\r\n  & span:not(:last-child):after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 10px;\r\n    height: 16px;\r\n    color: white;\r\n    border-left: 0.5px solid ${styleColor.primaryFontColor};\r\n    z-index: 1;\r\n  }\r\n}\r\n\r\n&.awards {\r\n  position: relative;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 15px;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -15px;\r\n    width: 100%;\r\n    border: 1px solid rgba(255, 255, 255, 0.05);\r\n    transform: rotate(0.5turn);\r\n  }\r\n`\r\n\r\nexport const FilmCard: React.FC<FilmCardPropsType> = ({film}) => {\r\n    return (\r\n        <FilmCardWrapper>\r\n            <div>\r\n                <NavLink to={'/film'}>\r\n                    <Poster image={film.image}/>\r\n                </NavLink>\r\n            </div>\r\n            <Wrapper className={'aboutFilm'}>\r\n                <Wrapper className={'descriptionContainer'}>\r\n                    <div>\r\n                        <NavLink to={'/film'}>\r\n                            <Title>{film.title}</Title>\r\n                        </NavLink>\r\n                        <FilmDescription className={'genres'}>\r\n                            <span>{film.type}</span>\r\n                            <span>{film.genres}</span>\r\n                            <span>{film.year}</span>\r\n                        </FilmDescription>\r\n                    </div>\r\n                    <FilmDescription className={'awards'}>{film.awards}</FilmDescription>\r\n                </Wrapper>\r\n                <ImdbCard rating={film.imDbRating}/>\r\n            </Wrapper>\r\n        </FilmCardWrapper>\r\n    )\r\n}","import axios from 'axios'\r\nimport {URL} from 'url'\r\n\r\nconst apiKey = process.env.APIKEY || 'k_so2y588i'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://imdb-api.com/en/API/'\r\n})\r\n\r\ntype FilmOnTitleResponseType = {\r\n    'id': string\r\n    'resultType': string,\r\n    'image': URL,\r\n    'title': string,\r\n    'description': string\r\n}\r\ntype BackDropType = {\r\n    link: string\r\n}\r\n\r\ntype GetIdResponseType = {\r\n    'searchType': string\r\n    'expression': string\r\n    'results': FilmOnTitleResponseType[],\r\n    'errorMessage': string\r\n}\r\n\r\nexport type SimilarFilmType = {\r\n    'id': string,\r\n    'title': string\r\n    'fullTitle': string\r\n    'year': string\r\n    'image': string\r\n    'plot': string\r\n    'directors': string\r\n    'stars': string,\r\n    'genres': string\r\n    'imDbRating': string\r\n}\r\n\r\nexport type FilmType = {\r\n    'id': string,\r\n    'title': string,\r\n    'fullTitle': string,\r\n    'type': string,\r\n    'plot': string,\r\n    'year': string,\r\n    'image': string,\r\n    'releaseDate': string,\r\n    'awards': string,\r\n    'imDbRating': string,\r\n    'genres': string,\r\n    'posters': {\r\n        backdrops: BackDropType[]\r\n    },\r\n    'trailer': {\r\n        'imDbId': string,\r\n        'title': string,\r\n        'fullTitle': string,\r\n        'type': string,\r\n        'year': string,\r\n        'videoId': string,\r\n\r\n        'videoTitle': string,\r\n        'videoDescription': string,\r\n        'thumbnailUrl': string,\r\n        'uploadDate': string,\r\n        'link': string,\r\n        'linkEmbed': string,\r\n        'errorMessage': string\r\n    },\r\n    'similars': SimilarFilmType[]\r\n}\r\n\r\nexport const filmAPI = {\r\n    getId(title: string) {\r\n        return instance.get<GetIdResponseType>(`Search/${apiKey}/${title}`)\r\n    },\r\n    getFilm(id: string) {\r\n        return instance.get<FilmType>(`Title/${apiKey}/${id}/Trailer,Images,Posters`)\r\n    }\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport type AppErrorType = null | string\r\nexport type appReducerInitialState = typeof initialState\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null as AppErrorType,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setAppLoading: (state, action: PayloadAction<{ loading: boolean }>) => {\r\n            state.loading = action.payload.loading\r\n        },\r\n        setAppError: (state, action: PayloadAction<{ error: AppErrorType }>) => {\r\n            state.error = action.payload.error\r\n        }\r\n    }\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\nexport const {setAppLoading, setAppError} = slice.actions","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport {filmAPI, FilmType} from '../../../api/filmAPI'\nimport {setAppError, setAppLoading} from \"../../../app/appReducer\";\n\n\nexport const getFilmId = createAsyncThunk('film/fetchFilmId', async (params: { title: string }, {\n    dispatch,\n    rejectWithValue\n}) => {\n    dispatch(setAppLoading({loading: true}))\n    dispatch(setAppError({error: null}))\n    try {\n        const res = await filmAPI.getId(params.title)\n        return {filmId: res.data.results[0].id}\n    } catch (e) {\n        if (e.message === \"Cannot read property 'id' of undefined\") {\n            dispatch(setAppError({error: 'Sorry, no results were found for your search ...'}))\n        } else {\n            dispatch(setAppError({error: 'An unexpected error has occurred. Please try again later or contact developer developer'}))\n        }\n        console.log(e?.message)\n        return rejectWithValue(e)\n    } finally {\n        dispatch(setAppLoading({loading: false}))\n    }\n})\n\nexport const getFilmData = createAsyncThunk('film/fetchFilmData', async (params: { id: string }, {\n    dispatch,\n    rejectWithValue\n}) => {\n    dispatch(setAppLoading({loading: true}))\n    dispatch(setAppError({error: null}))\n    try {\n        const res = await filmAPI.getFilm(params.id)\n        return {film: res.data}\n    } catch (e) {\n        dispatch(setAppError({error: e.message || 'Some error occurred'}))\n        console.log(e?.message)\n        return rejectWithValue(e)\n    } finally {\n        dispatch(setAppLoading({loading: false}))\n    }\n})\n\nconst slice = createSlice({\n    name: 'film',\n    initialState: {} as FilmType,\n    reducers: {\n        setFilmId: ((state, action: PayloadAction<{ id: string }>) => {\n            state.id = action.payload.id\n        }),\n        setFilm: ((state, action:PayloadAction<{film:FilmType}>) => {\n            return {...state, ...action.payload.film}\n})\n    },\n    extraReducers: builder => {\n        builder.addCase(getFilmId.fulfilled, (state, action) => {\n            return {...state, id: action.payload.filmId}\n        })\n            .addCase(getFilmData.fulfilled, (state, action) => {\n                return {...state, ...action.payload.film}\n            })\n    }\n})\n\nexport const {setFilmId, setFilm} = slice.actions\nexport const filmReducer = slice.reducer\n","export default __webpack_public_path__ + \"static/media/spinner.f3acea75.svg\";","import styled from \"styled-components\";\r\nimport preloader from \"../../assets/images/spinner.svg\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = styled.div`\r\n  align-items: center;\r\n  background: rgba(23, 22, 22, 0.8);\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  transition: opacity 0.3s linear;\r\n  width: 100%;\r\n  z-index: 9999;\r\n`\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <Preloader>\r\n            <img src={preloader} alt={'spinner'}/>\r\n        </Preloader>\r\n    )\r\n}","import YouTube, {Options} from 'react-youtube'\r\nimport styles from './YoutubeBackground.module.scss'\r\n\r\nexport const YoutubeBackground = () => {\r\n\r\n    const videoOptions:Options = {\r\n        playerVars: {\r\n            autoplay: 1,\r\n            controls: 0,\r\n            rel: 0,\r\n            showinfo: 0,\r\n            loop:1,\r\n            mute: 1,\r\n        }\r\n    };\r\n\r\n    const _onEnd = (event:{ target: any; data: number; }) =>  {\r\n        event.target.playVideo();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.videoBackground}>\r\n                <div className={styles.videoForeground}>\r\n                    <YouTube\r\n                        videoId=\"gA0nQyDZR4A\"\r\n                        opts={videoOptions}\r\n                        className={styles.videoIframe}\r\n                        onEnd={_onEnd}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/searchButton.cf9a8844.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport searchIcon from \"../../../../../assets/images/searchButton.svg\";\r\nimport {styleColor} from \"../../../../../common/stylesVariables\";\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 420px;\r\n  width: 100%;\r\n  height: 50px;\r\n\r\n  &::before {\r\n    content: url(${searchIcon});\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 30px;\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 14px 10px 14px 68px;\r\n  border-radius: 20px;\r\n  border: none;\r\n  outline: transparent;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0;\r\n  background-color: ${styleColor.HeaderInputBackgroundColor};\r\n  color: ${styleColor.HeaderTextColor};\r\n`\r\n\r\nexport const HeaderInput = () => {\r\n    return (\r\n        <InputWrapper>\r\n            <Input placeholder={'Type here smth...'}/>\r\n        </InputWrapper>\r\n    )\r\n}","import styled from 'styled-components'\r\nimport {styleColor, styledHeaderFooter} from '../../../../../common/stylesVariables'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {HeaderInput} from \"./HeaderInput\";\r\n\r\nexport const HeaderWrapper = styled.header`\r\n  ${styledHeaderFooter};\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst Link = styled(NavLink)`\r\n  font-size: 24px;\r\n  font-weight: 300;\r\n  line-height: 29px;\r\n  color: ${styleColor.primaryFontColor}\r\n`\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <div>\r\n                <Link to={'/search'}>Richbee Shows</Link>\r\n            </div>\r\n            <HeaderInput/>\r\n        </HeaderWrapper>\r\n    )\r\n}","import {filmAPI, FilmType} from \"../../../api/filmAPI\";\r\nimport {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\nimport {setAppError, setAppLoading} from \"../../../app/appReducer\";\r\n\r\nexport type SimilarFilmsStateType = {\r\n    [key:string] : FilmType\r\n}\r\n\r\nexport const getSimilarFilmData = createAsyncThunk('similarFilms/getFilmData', async (params: { id: string }, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    dispatch(setAppLoading({loading: true}))\r\n    dispatch(setAppError({error: null}))\r\n    try {\r\n        const res = await filmAPI.getFilm(params.id)\r\n        return {film: res.data, id: params.id}\r\n    } catch (e) {\r\n        dispatch(setAppError({error: e.message || 'Some error occurred'}))\r\n        console.log(e?.message)\r\n        return rejectWithValue(e)\r\n    } finally {\r\n        dispatch(setAppLoading({loading: false}))\r\n    }\r\n})\r\n\r\nconst slice = createSlice({\r\n    name: 'similarFilms',\r\n    initialState: {id : {} as FilmType} as SimilarFilmsStateType,\r\n    reducers: {},\r\n    extraReducers: builder => {\r\n        builder.addCase(getSimilarFilmData.fulfilled, (state, action) => {\r\n            state[action.payload.id] = {...action.payload.film}\r\n        })\r\n    }\r\n})\r\n\r\nexport const similarFilmsReducer = slice.reducer","import {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../../../app/store'\r\nimport styled from 'styled-components'\r\nimport {ImdbCard} from '../../../ImdbCard/ImdbCard'\r\nimport {backgroundCover, styleColor} from '../../../../common/stylesVariables'\r\nimport {useEffect, useState} from 'react'\r\nimport {FilmType} from \"../../../../api/filmAPI\";\r\nimport {getSimilarFilmData} from \"../../SimilarFilms/similarFilms-reducer\";\r\n\r\nconst MainWrapper = styled.div<{ image: string | null }>`\r\n  flex-grow: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgb(17, 17, 17);\r\n  background-image: url(${props => props.image});\r\n  background-image: linear-gradient(90deg, ${styleColor.secondaryBackgroundColor} 19%, rgba(17, 17, 17, 0) 99.75%), url(${props => props.image});\r\n  ${backgroundCover};\r\n  color: ${styleColor.primaryFontColor};\r\n  padding: 120px 150px 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &.show {\r\n    padding-top: 10px;\r\n    padding-bottom: 50px;\r\n  }\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-size: 72px;\r\n  font-weight: 900;\r\n  line-height: 88px;\r\n  max-width: 566px;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  height: 64px;\r\n  width: 200px;\r\n  border: 2px solid #FBFBFB;\r\n  border-radius: 40px;\r\n  background: transparent;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n  color: #FBFBFB;\r\n  margin-bottom: 50px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border: 5px solid #FBFBFB;\r\n  }\r\n`\r\n\r\nconst Awards = styled.span`\r\n  display: block;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 22px;\r\n  max-width: 433px;\r\n`\r\n\r\nconst GenresWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & > span:nth-child(1) {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  & > span:not(:first-child) {\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    line-height: 29px;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 0;\r\n  padding-bottom: 0;\r\n  margin-bottom: 0;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &.show {\r\n    padding-bottom: 28%;\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nconst Iframe = styled.iframe`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst Span = styled.span`\r\n  padding-right: 48px;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 24px;\r\n    height: 24px;\r\n    color: ${styleColor.primaryFontColor};\r\n    border: 1px solid ${styleColor.primaryFontColor};\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nexport const Main = () => {\r\n    const film = useSelector<AppRootStateType, FilmType>(state => state.film)\r\n    const dispatch = useDispatch()\r\n\r\n    const [showTrailer, setShowTrailer] = useState<boolean>(false)\r\n\r\n    const onButtonHandler = () => {\r\n        setShowTrailer(true)\r\n    }\r\n\r\n    //loading similar films more data\r\n    useEffect(() => {\r\n        if (film.title) {\r\n            film.similars.map(f => dispatch(getSimilarFilmData({id: f.id})))\r\n            setShowTrailer(false)\r\n        }\r\n    }, [dispatch, film.title, film.similars])\r\n\r\n    return (\r\n        <MainWrapper className={showTrailer ? 'show' : ''} image={film.posters && film.posters.backdrops[0].link}>\r\n            <div>\r\n                <Title>{film.title}</Title>\r\n                <GenresWrapper>\r\n                    <span><ImdbCard inlineProps={true} rating={film.imDbRating}/></span>\r\n                    <Span>{film.genres}</Span>\r\n                    <Span>{film.type}</Span>\r\n                    <span>{film.year}</span>\r\n                </GenresWrapper>\r\n            </div>\r\n            <div>\r\n                {!showTrailer && film?.trailer?.linkEmbed && <Button onClick={onButtonHandler}>Watch</Button>}\r\n                <Wrapper className={showTrailer ? 'show' : ''}>\r\n                    {showTrailer &&\r\n                    <Iframe\r\n                        src={film?.trailer?.linkEmbed}\r\n                        frameBorder=\"0\"\r\n                        allowFullScreen\r\n                        title=\"Trailer\"\r\n                    />\r\n                    }\r\n                </Wrapper>\r\n                <Awards>{film.awards}</Awards>\r\n            </div>\r\n        </MainWrapper>\r\n    )\r\n}","import {Header} from './Header/Header'\r\nimport {Main} from './Main'\r\nimport styled from 'styled-components'\r\nimport React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {Spinner} from \"../../../Preloader/Preloader\";\r\nimport {Element} from \"react-scroll/modules\";\r\n\r\nexport const PageWrapper = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const FilmPage: React.FC = () => {\r\n    const appLoading = useSelector<AppRootStateType, boolean>(state => state.app.loading)\r\n    return (\r\n        <Element name={'film'}>\r\n            <PageWrapper>\r\n                {appLoading && <Spinner/>}\r\n                <Header/>\r\n                <Main/>\r\n            </PageWrapper>\r\n        </Element>\r\n    )\r\n}","import styled from 'styled-components'\r\nimport React, {useEffect} from 'react'\r\nimport {FilmCard} from './FilmCard/FilmCard'\r\nimport {SubmitHandler, useForm} from 'react-hook-form'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../../app/store'\r\nimport {getFilmData, getFilmId} from '../FilmPage/film-reducer'\r\nimport {styleColor} from '../../../common/stylesVariables'\r\nimport {Spinner} from \"../../Preloader/Preloader\";\r\nimport {YoutubeBackground} from \"./YoutubeBackground/YoutubeBackground\";\r\nimport {FilmType} from \"../../../api/filmAPI\";\r\nimport {PageWrapper} from \"../FilmPage/Main/FilmPage\";\r\n\r\ntype Inputs = {\r\n    title: string;\r\n};\r\n\r\nconst SearchPageWrapper = styled(PageWrapper)`\r\n  padding-top: 200px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\n\r\nconst SearchPageContainer = styled.div`\r\n  max-height: 953px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  color: ${styleColor.primaryFontColor};\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 64px;\r\n  font-weight: 900;\r\n  line-height: 78px;\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nexport const SecondTitle = styled.h2`\r\n  font-size: 36px;\r\n  font-weight: 500;\r\n  line-height: 52px;\r\n  letter-spacing: 0;\r\n  margin-bottom: 80px;\r\n  text-align: center;\r\n`\r\n\r\nconst Form = styled.form`\r\n  max-width: 555px;\r\n  width: 100%;\r\n  height: 50px;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  &.show {\r\n    margin-bottom: 20px;\r\n  }\r\n`\r\n\r\nconst Input = styled.input`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 14px 148px 14px 28px;\r\n  border-radius: 20px;\r\n  border: none;\r\n  outline: transparent;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  letter-spacing: 0;\r\n`\r\n\r\nconst Button = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 50px;\r\n  width: 120px;\r\n  border-radius: 0 20px 20px 0;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: ${styleColor.primaryFontColor};\r\n  background: #4EA7F9;\r\n  border: none;\r\n  outline: transparent;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const SearchPage = () => {\r\n    const dispatch = useDispatch()\r\n    const appLoading = useSelector<AppRootStateType, boolean>(state => state.app.loading)\r\n\r\n    //if not film that's before request\r\n    const filmId = useSelector<AppRootStateType, string>(state => state.film.id)\r\n    const film = useSelector<AppRootStateType, FilmType>(state => state.film)\r\n\r\n    const {register, handleSubmit} = useForm<Inputs>()\r\n    //request for film id\r\n    const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n        dispatch(getFilmId({title: data.title}))\r\n    }\r\n\r\n    //when film id, can request for film data\r\n    useEffect(() => {\r\n        if (filmId) {\r\n            dispatch(getFilmData({id: filmId}))\r\n        }\r\n    }, [filmId, dispatch])\r\n\r\n    return (\r\n        <SearchPageWrapper>\r\n            {appLoading && <Spinner/>}\r\n            <SearchPageContainer>\r\n                <Title>Unlimited movies,<br/> TV shows, and more.</Title>\r\n                <SecondTitle>Watch anywhere. Cancel anytime.</SecondTitle>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Input {...register('title')} placeholder={'Films, serials'}/>\r\n                    <Button type=\"submit\">Search</Button>\r\n                </Form>\r\n                {film.title && <FilmCard film={film}/>}\r\n            </SearchPageContainer>\r\n            <YoutubeBackground/>\r\n        </SearchPageWrapper>\r\n    )\r\n}","import styled from 'styled-components'\r\nimport {styleColor, styledHeaderFooter} from '../../../../common/stylesVariables'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst FooterWrapper = styled.footer`\r\n  ${styledHeaderFooter};\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst Link = styled(NavLink)`\r\n  font-size: 18px;\r\n  font-weight: 900;\r\n  line-height: 22px;\r\n  color: ${styleColor.primaryFontColor};\r\n`\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <Link to={'/search'}>Richbee Shows</Link>\r\n        </FooterWrapper>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {FilmType, SimilarFilmType} from '../../../api/filmAPI'\r\nimport {ImdbCard} from '../../ImdbCard/ImdbCard'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {setFilm, setFilmId} from \"../FilmPage/film-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../app/main/routes/Pages\";\r\nimport {Link} from \"react-scroll/modules\";\r\nimport {backgroundCover} from \"../../../common/stylesVariables\";\r\n\r\ntype SimilarFilmPropsType = {\r\n    similarFilm: SimilarFilmType\r\n}\r\n\r\nconst SimilarFilmWrapper = styled.div`\r\n  min-width: 260px;\r\n  min-height: 360px;\r\n  margin-right: 30px;\r\n  margin-top: 10px;\r\n`\r\n\r\nconst SimilarFilmInner = styled.div<{ image: string }>`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  position: relative;\r\n  background-color: black;\r\n  background-image: url(${props => props.image});\r\n  ${backgroundCover};\r\n  border-radius: 20px;\r\n`\r\n\r\nconst Description = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(20, 19, 19, 0.85);\r\n  z-index: 999;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 20% 30px;\r\n  color: #FFFFFF;\r\n  border-radius: 20px;\r\n`\r\n\r\nconst DescriptionTitle = styled.h3`\r\n  font-size: 24px;\r\n  font-weight: 800;\r\n  line-height: 29px;\r\n  text-align: left;\r\n  margin-bottom: 8px;\r\n  overflow-wrap: anywhere;\r\n  cursor: pointer;\r\n`\r\nconst GenresSpan = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 17px;\r\n  margin-bottom: 20px;\r\n\r\n  &.top {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  margin-bottom: 23px;\r\n  overflow-wrap: anywhere;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 4;\r\n  -webkit-box-orient: vertical;\r\n`\r\n\r\nexport const SimilarFilm: React.FC<SimilarFilmPropsType> = ({similarFilm}) => {\r\n    const dispatch = useDispatch()\r\n    const [toggleDescription, setToggleDescription] = useState<boolean>(false)\r\n    const film = useSelector<AppRootStateType, FilmType>(state => state.similarFilms[similarFilm.id])\r\n    const [redirect, setRedirect] = useState<boolean>(false)\r\n\r\n    const showDescription = () => {\r\n        setToggleDescription(true)\r\n    }\r\n\r\n    const hideDescription = () => {\r\n        setToggleDescription(false)\r\n    }\r\n\r\n    const chooseFilm = () => {\r\n        dispatch(setFilmId({id: film.id}))\r\n        dispatch(setFilm({film}))\r\n        setRedirect(true)\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to={PATH.FILM}/>\r\n    }\r\n\r\n    return (\r\n        <SimilarFilmWrapper>\r\n            <SimilarFilmInner onMouseEnter={showDescription} onMouseLeave={hideDescription} image={similarFilm.image}>\r\n                {toggleDescription &&\r\n                <Description>\r\n                    <Link to={'film'} spy={true} smooth={true} duration={2000}>\r\n                        <DescriptionTitle onClick={chooseFilm}>{film.title}</DescriptionTitle>\r\n                    </Link>\r\n                    <GenresSpan className={'top'}>{film.type}</GenresSpan>\r\n                    <GenresSpan>{film.genres}</GenresSpan>\r\n                    <Paragraph>{film.plot}</Paragraph>\r\n                    <ImdbCard rating={film.imDbRating}/>\r\n                </Description>}\r\n            </SimilarFilmInner>\r\n        </SimilarFilmWrapper>\r\n    )\r\n}","import styled from 'styled-components'\r\nimport {useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../../../app/store'\r\nimport {SimilarFilm} from '../../SimilarFilms/SimilarFilm'\r\nimport {FilmType} from \"../../../../api/filmAPI\";\r\n\r\nconst MainDescriptionWrapper = styled.div`\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 60px 150px;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 36px;\r\n  font-weight: 900;\r\n  line-height: 52px;\r\n  max-width: 800px;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  line-height: 28px;\r\n  color: #323232;\r\n  max-width: 800px;\r\n`\r\n\r\nconst SecondTitle = styled.h3`\r\n  font-size: 24px;\r\n  font-weight: 900;\r\n  line-height: 52px;\r\n  margin-bottom: 20px;\r\n  overflow-wrap: break-word;\r\n`\r\n\r\nconst SimilarFilms = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`\r\nexport const MainDescription = () => {\r\n\r\n    const film = useSelector<AppRootStateType, FilmType>(state => state.film)\r\n    const similarFilms = film.similars?.slice(0, 4)\r\n\r\n    return (\r\n        <MainDescriptionWrapper>\r\n            <section>\r\n                <Title>Watch {film.title} on Richbee Shows</Title>\r\n                <Paragraph>{film.plot}</Paragraph>\r\n            </section>\r\n            <section>\r\n                <SecondTitle>You may also like</SecondTitle>\r\n                <SimilarFilms>\r\n                    {similarFilms.map(f => <SimilarFilm key={f.id} similarFilm={f}/>)}\r\n                </SimilarFilms>\r\n            </section>\r\n        </MainDescriptionWrapper>\r\n    )\r\n}","import {Footer} from './Footer'\r\nimport {MainDescription} from './MainDescription'\r\nimport {PageWrapper} from '../Main/FilmPage'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {Spinner} from \"../../../Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const FilmDescription = () => {\r\n    const appLoading = useSelector<AppRootStateType, boolean>(state => state.app.loading)\r\n    return (\r\n        <PageWrapper>\r\n            {appLoading && <Spinner/>}\r\n            <MainDescription/>\r\n        <Footer/>\r\n        </PageWrapper>\r\n    )\r\n}","import {FilmPage} from \"./Main/FilmPage\";\r\nimport {FilmDescription} from \"./FilmDescription/FilmDescription\";\r\n\r\nexport const Film = () => {\r\n    return (\r\n        <>\r\n            <FilmPage/>\r\n            <FilmDescription/>\r\n        </>\r\n    )\r\n}","import {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport React, {DetailedHTMLProps, HTMLAttributes} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../app/main/routes/Pages\";\r\n\r\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\ntype LoginRedirectPagePropsType = DivPropsType & {}\r\n\r\nexport const SearchRedirect:React.FC<LoginRedirectPagePropsType> = ({children, ...restProps}) => {\r\n    const film = useSelector<AppRootStateType, string>(state => state.film.type)\r\n\r\n    if (!film) {\r\n        return <Redirect to={PATH.SEARCH}/>\r\n    }\r\n\r\n    return (\r\n        <div {...restProps}>\r\n            {children}\r\n        </div>\r\n    )\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/background.8d1e97cf.png\";","export default __webpack_public_path__ + \"static/media/404.b0232c0e.gif\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {backgroundCover, styleColor} from \"../../../common/stylesVariables\";\r\nimport backgroundImage from '../../../assets/images/background.png'\r\nimport {Header} from \"../FilmPage/Main/Header/Header\";\r\nimport {PageWrapper} from \"../FilmPage/Main/FilmPage\";\r\nimport {Title} from \"../SearchPage/SearchPage\";\r\nimport travoltaGif from '../../../assets/images/404.gif'\r\n\r\nconst PageInner = styled.div`\r\n  background-image: url(${backgroundImage});\r\n  ${backgroundCover};\r\n  flex-grow: 1;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  color: ${styleColor.primaryFontColor};\r\n  font-size: 100px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  max-width: 100%;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\nmax-width: 500px;\r\n`\r\n\r\nexport const ErrorPage = () => {\r\n    return (\r\n        <PageWrapper>\r\n            <Header/>\r\n        <PageInner>\r\n                <Title>Looks like you got lost.</Title>\r\n            <Wrapper>\r\n                <Image src={travoltaGif} alt=\"Travolta looks around\"/>\r\n            </Wrapper>\r\n        </PageInner>\r\n        </PageWrapper>\r\n    )\r\n}\r\n\r\n","import React, {ReactNode} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SearchPage} from \"../../../components/features/SearchPage/SearchPage\";\r\nimport {Film} from \"../../../components/features/FilmPage/Film\";\r\nimport {SearchRedirect} from \"../../../components/SearchRedirect/SearchRedirect\";\r\nimport {ErrorPage} from \"../../../components/features/404Page/404Page\";\r\n\r\nexport type PageType = {\r\n    _id: number;\r\n    title: string;\r\n    path?: string;\r\n    params?: string;\r\n    exact?: boolean;\r\n    page: ReactNode;\r\n};\r\n\r\nexport const PATH = {\r\n    SEARCH: '/search',\r\n    FILM: '/film',\r\n    ERROR: '/404'\r\n}\r\n\r\nexport const pages: PageType[] = [\r\n    {_id: 0, title: 'main', path: '/', exact: true, page: <Redirect to={PATH.SEARCH}/>},\r\n    {_id: 1, title: 'login', path: PATH.SEARCH, exact: true, page: <SearchPage/>},\r\n    {_id: 2, title: 'film', path: PATH.FILM, exact: true, page:  <SearchRedirect><Film/></SearchRedirect> },\r\n    {_id: 3, title: '404', path: PATH.ERROR, exact: true, page: <ErrorPage/>},\r\n    {_id: 4, title: 'error', path: '*', exact: false, page: <Redirect to={PATH.ERROR}/> },\r\n]","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\nimport {pages} from './Pages'\r\n\r\nconst mappedRoutes = pages.map((p) => (\r\n    <Route\r\n        key={p._id}\r\n        path={p.path && (p.path + (p.params || \"\"))}\r\n        exact={p.exact}\r\n        render={() => p.page}\r\n/>\r\n))\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            {mappedRoutes}\r\n        </Switch>\r\n    )\r\n}","import {Routes} from \"./routes/Routes\";\r\n\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <>\r\n        <Routes/>\r\n        </>\r\n    )\r\n}","import React, {useEffect} from 'react'\nimport './App.scss'\nimport {Main} from \"./main/Main\";\nimport {toast, Toaster} from \"react-hot-toast\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./store\";\nimport {AppErrorType} from \"./appReducer\";\n\nfunction App() {\n    const appError = useSelector<AppRootStateType, AppErrorType>(state => state.app.error)\n\n    useEffect(() => {\n        if (appError) {\n        toast.error(appError)\n        }\n    },[appError])\n\n    return (\n        <>\n            <Main/>\n            <Toaster position={'bottom-center'}/>\n        </>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux'\r\nimport {configureStore} from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\nimport {filmReducer} from '../components/features/FilmPage/film-reducer'\r\nimport {appReducer} from \"./appReducer\";\r\nimport {similarFilmsReducer} from \"../components/features/SimilarFilms/similarFilms-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    film: filmReducer,\r\n    app: appReducer,\r\n    similarFilms: similarFilmsReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof store.getState>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport {store} from './app/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoBackground\":\"YoutubeBackground_videoBackground__J0gz6\",\"videoForeground\":\"YoutubeBackground_videoForeground__3BO6k\"};"],"sourceRoot":""}